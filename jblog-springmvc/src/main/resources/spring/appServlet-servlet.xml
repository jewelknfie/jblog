<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:task="http://www.springframework.org/schema/task"
             xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- freemarker的配置 -->
    <beans:bean id="freemarkerConfigurer"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <beans:property name="templateLoaderPath" value="/WEB-INF/ftl/" />
        <beans:property name="defaultEncoding" value="UTF-8" />
        <beans:property name="freemarkerSettings">
            <beans:props>
                <beans:prop key="template_update_delay">10</beans:prop>
                <beans:prop key="locale">zh_CN</beans:prop>
                <beans:prop key="datetime_format">yyyy-MM-dd HH:mm:ss</beans:prop>
                <beans:prop key="date_format">yyyy-MM-dd</beans:prop>
                <beans:prop key="number_format">#.##</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    <!-- FreeMarker视图解析 如返回userinfo。。在这里配置后缀名ftl和视图解析器。。 -->
    <beans:bean id="viewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <beans:property name="viewClass"
                  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
        <beans:property name="suffix" value=".ftl" />
        <beans:property name="contentType" value="text/html;charset=utf-8" />
        <beans:property name="exposeRequestAttributes" value="true" />
        <beans:property name="exposeSessionAttributes" value="true" />
        <beans:property name="exposeSpringMacroHelpers" value="true" />
        <beans:property name="requestContextAttribute" value="rc" />
    </beans:bean>

    <beans:bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource"
          p:basename="i18n/messages" />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <!--<mvc:resources mapping="/javascript/**" location="/assets/js/"/>-->
    <!--<mvc:resources mapping="/styles/**" location="/assets/css/"/>-->
    <!--<mvc:resources mapping="/images/**" location="/assets/imgs/"/>-->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/stylesheets/**" location="/stylesheets/"/>
    <mvc:resources mapping="/assets/**" location="/assets/"/>

    <!-- Imports user-defined @Controller beans that process client requests -->
    <beans:import resource="controllers.xml" />
    <beans:import resource="application-jpa-context.xml" />


    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <!--<annotation-driven conversion-service="conversionService" enable-matrix-variables="true">-->
        <!--<argument-resolvers>-->
            <!--<beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/>-->
        <!--</argument-resolvers>-->
    <!--</annotation-driven>-->


    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <!--<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<beans:property name="prefix" value="/WEB-INF/views/" />-->
        <!--<beans:property name="suffix" value=".jsp" />-->
    <!--</beans:bean>-->

    <!-- Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package -->
    <!--<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
        <!--<beans:property name="formatters">-->
            <!--<beans:bean class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" />-->
        <!--</beans:property>-->
    <!--</beans:bean>-->

    <!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
    <!--<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />-->

    <!--<task:annotation-driven />-->

</beans:beans>